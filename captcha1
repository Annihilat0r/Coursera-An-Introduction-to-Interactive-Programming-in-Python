import http.client, io, urllib.parse
import pytesser.pytesser
from PIL import Image, ImageEnhance
from bs4 import BeautifulSoup

url ='www.hackthis.co.uk'
headerss = {"Host": "www.hackthis.co.uk", "Cookie": "PHPSESSID=rrek2fb0s07vtq0qsoij04duu3; "
                      "autologin==M%8B%EC%2F%BD%D2%11H%D3%C6bZ%A2%8E%28%E0ml%5D%EEu%2C%9D%17%D5%DA%07%7C%DE%93%02%DC%FE%2C%09%93%2BX%B4%B7%EEB%C0o%98%3A%06%099F%AD%99%A9_%C7.%15%93-%18f%7EU%14; "
                      "member=1",
            "Referer": "https://www.hackthis.co.uk/levels/captcha/1",
            "Connection":"keep-alive",
            "User-Agent":"Mozilla/5.0 (Windows NT 6.2; WOW64; rv:18.0) Gecko/20100101 Firefox/18.0",
            "Content-Type": "application/x-www-form-urlencoded"
            }
def get_picture():

    connection = http.client.HTTPSConnection("localhost",8080)
    connection.set_tunnel(url)
    connection.request("GET","/levels/extras/captcha1.php", headers=headerss)
    PNG_picture = (connection.getresponse().read())
    CaptchaImage = Image.open(io.BytesIO(PNG_picture))
    return CaptchaImage

def do_better(im):
    nx, ny = im.size
    im = im.resize((int(nx*5), int(ny*5)), Image.BICUBIC)
    enh = ImageEnhance.Contrast(im)
    im = enh.enhance(1.5)
    im = im.convert("P")
    im2 = Image.new("P",im.size,255)
    temp={}
    for x in range(im.size[1]):
        for y in range(im.size[0]):
            pix = im.getpixel((y,x))
            temp[pix] = pix
            if pix != 28 : # these are the numbers to get
                im2.putpixel((y,x),0)
    return im2

def send(text):
    #connection = http.client.HTTPSConnection(url)
    params = "".join(text)
    #print(params)
    params = urllib.parse.quote(params)
    print(params)
    params = "answer="+params[6:]
    print(params)
    connection = http.client.HTTPSConnection("localhost",8080)
    connection.set_tunnel(url)
    connection.request("POST","/levels/captcha/1", params, headers=headerss)
    response2 = connection.getresponse()
    soup2 = BeautifulSoup(response2.read(),"html.parser")
    answer=(soup2.find("span", class_="strong red"))
    if answer.text == "Incomplete":
        print("sorrrrrrrry :(")
        do_it(1)
    else:
        print("STOP!")

def do_it(range_times):

    for i in range(range_times):
        im = get_picture()
        #im = do_better(im)
        nx, ny = im.size
        im = im.resize((int(nx*5), int(ny*5)), Image.BICUBIC)
        enh = ImageEnhance.Contrast(im)
        im = enh.enhance(1.5)
        #im.show()
        for i in range(1):
            try:
                text = pytesser.pytesser.image_to_string(im)
                #im.show()
                print(text)
                text=text[::-1]
                send(text)
            except:
                pass
                #do_it(1)

do_it(1)
print("why stop?")
#print("status: " + str(response.status), response.reason)
#response = connection.getresponse()
#PNG_text = PNG_picture.decode('ANSI', 'ignore')
#print(PNG_text)
#catch = (soup.textarea.string)
#list2 = catch.split(',')
#im = Image.open(PNG_picture)
#im = im.convert("P")

#print(im.histogram())
